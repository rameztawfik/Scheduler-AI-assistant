# config.yaml â€” tuned for ~8 GB VRAM
base_model: EleutherAI/pythia-2.8b

# 4-bit quantization (QLoRA)
load_in_4bit: true
bnb_4bit_compute_dtype: bfloat16
bnb_4bit_quant_type: nf4
bnb_4bit_use_double_quant: true

# LoRA
adapter_type: lora
lora_r: 8
lora_alpha: 16
lora_dropout: 0.05
# Pythia/NeoX target modules:
target_modules: ["q_proj","k_proj","v_proj","o_proj","dense_h_to_4h","dense_4h_to_h"]

# Data
datasets:
  - path: ./data/train.jsonl
    type: alpaca
val_set_size: 0.1

# Train efficiency knobs for 8 GB
sequence_len: 512          # keep short to avoid OOM
sample_packing: true
gradient_checkpointing: true
per_device_train_batch_size: 1
gradient_accumulation_steps: 32  # increases effective batch size without VRAM
num_train_epochs: 2
learning_rate: 2e-4
weight_decay: 0.0
lr_scheduler: cosine
warmup_ratio: 0.03

# Logging & output
output_dir: ./outputs/pythia2.8b-lora
logging_steps: 25
eval_steps: 200
save_steps: 200